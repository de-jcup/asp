# This workflow will release to maven central with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java Release with Maven
on:
  workflow_dispatch:
    inputs:
      milestone-number:
        description: Milestone number for release(s)
        required: true


jobs:
  release:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build all + test without integration tests
      run: ./gradlew build buildDist -x :asp-integrationtest:test

    - name: Start full integration test
      run: ./gradlew :asp-integrationtest:fullintegrationtest
        
    - name: Set Release version env variable
      run: |
        echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

    - name: Build with Gradle
      run: mvn -B package --file pom.xml
      
    # We use 'if: always()' to run a step even if a previous step failed
    - name: Create combined test report
      if: always()
      run: ./gradlew createCombinedTestReport
      
    # -----------------------------------------
    # Upload Build Artifacts
    # -----------------------------------------
    - name: Archive combined test report
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: combined-asp-testreport
        path: build/reports/combined-report
        retention-days: 14
    - name: Archive distribution jar
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: asp-distribution
        path: asp-server-asciidoctorj/build/libs
        retention-days: 14

    # -----------------------------------------
    # Start maven central deployment
    # -----------------------------------------
    - name: Set up Apache Maven Central
      uses: actions/setup-java@v1
      with: # running setup-java again overwrites the settings.xml
        java-version: 11
        server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
        server-username: MAVEN_USERNAME # env variable for username in deploy
        server-password: MAVEN_CENTRAL_TOKEN # env variable for token in deploy
        gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}  # Value of the GPG private key to import
        gpg-passphrase:  MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase

    #- name: Debug output
    #  run: cat ~/.m2/settings.xml

    - name: Publish to Apache Maven Central
      #run: mvn deploy # deploy to staging, so not closing, and can be dropped via Web UI
      run: mvn deploy -P release #deploys and closes release on OSSRH. So not longer staging, cannot be deleted
      env:
        MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
        MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_TOKEN }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}  
      
    - name: "Create release"
      id: "create_release"
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
          tag_name: v${{ env.RELEASE_VERSION }}
          commitish: master
          release_name: Version ${{ env.RELEASE_VERSION }}
          body: |
            Changes in this version
            - Some minor changes and bugfixes
            
            For more details please look at [Milestone ${{github.event.inputs.milestone-number}}]( https://github.com/de-jcup/asp/milestone/${{github.event.inputs.milestone-number}}?closed=1)
            
            Created artifacts can be found at https://mvnrepository.com/artifact/de.jcup.asp
          draft: false
          prerelease: false
    